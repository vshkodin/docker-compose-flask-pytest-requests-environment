docker-compose up
docker-compose build --no-cache
docker-compose exec test-framework /api_tests.sh


mv -f build/allure-results/*.* allure-results

docker build -t vlad:latest -f Dockerfile.python-pytest .
docker build -t vlad_two:latest -f Dockerfile .
docker run --name ppython vlad:latest
docker cp  ppython:/allure_results/ .
docker kill ppython
docker container stop ppython
docker container rm ppython


docker build --no-cache -t vladflask:latest -f Dockerfile.flask-api .
docker run --name flaskapi vladflask:latest
docker run -d -p 5000:5000 --name flaskapi vladflask:latest

docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)


docker-compose exec test-framework ls

docker-compose build
docker-compose build --no-cache
docker-compose up -d
docker network ls
docker network inspect d,,
docker network prune
docker-compose -f docker-compose.dev.yml up

git copy :
:share volumes
: copy to the container




docker build -t
docker exec 21349 shell

#build an image
docker build -t vlad:latest -f Dockerfile.python-pytest .
docker build -t vlad:latest --rm  -f Dockerfile.python-pytest .
docker build -t vlad:latest --rm  -f Dockerfile.python-pytest .

#run container
docker run  vlad:latest
docker run --rm vlad:latest
docker run -t vlad:latest --rm  -f Dockerfile.python-pytest .
docker run vlad:latest

docker exec  842c672a900e pip
CMD tail

docker images
docker container ps -a
docker cp  67d:/allure_results/*.* allure-report/


#allure
 docker run -p 5050:5050 -e CHECK_RESULTS_EVERY_SECONDS=3 -e KEEP_HISTORY="TRUE" \
                 -v ${PWD}/allure-results:/app/allure-results \
                 -v ${PWD}/allure-reports:/app/default-reports \
                 frankescobar/allure-docker-service

 docker run -p 5050:5050 -e CHECK_RESULTS_EVERY_SECONDS=3 -e KEEP_HISTORY="FALSE" frankescobar/allure-docker-service



 stage('Smoke Tests') {
            agent { node { label 'html-tests' } }
            steps {
                checkout scm
                sh "mkdir -p python_build"
                sh 'TEST_BASEURL=http://${STAGING_SERVER} tests/run_python_tests.sh'
                sh "rm -rf allure-results && mv python_build/allure-results allure-results"
                allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'allure-results']]
                ])
            }
        }

docker cp  67d:allure_results allure-report